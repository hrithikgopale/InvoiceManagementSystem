@{
    ViewData["Title"] = "Dashboard";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<div class="container mt-4">
    <h2>Dashboard</h2>

    <!-- Top Cards -->
    <div class="row my-4">
        <div class="col-md-6 mb-3">
            <div class="card text-center shadow-sm p-3">
                <h5>Total Invoices</h5>
                <h2>@ViewBag.TotalInvoices</h2>
            </div>
        </div>
        <div class="col-md-6 mb-3">
            <div class="card text-center shadow-sm p-3">
                <h5>Total Sales</h5>
                <h2>@ViewBag.TotalSales.ToString("C")</h2>
            </div>
        </div>
    </div>

    <!-- Charts Row -->
    <div class="row my-4">
        <div class="col-md-6 mb-3">
            <div class="card p-3 shadow-sm">
                <h5>Stock Remaining</h5>
                <canvas id="stockChart"></canvas>
            </div>
        </div>
        <div class="col-md-6 mb-3">
            <div class="card p-3 shadow-sm">
                <h5>Monthly Sales (Current Year)</h5>
                <canvas id="monthlySalesChart"></canvas>
            </div>
        </div>
        <div class="col-md-12 mb-3">
            <div class="card p-3 shadow-sm">
                <h5>Sales by Party</h5>
                <canvas id="partySalesChart" style="width:400px; height:400px;"></canvas>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // ---------- STOCK CHART ----------
        debugger;
        var ctxStock = document.getElementById('stockChart').getContext('2d');

        var inventoryData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewBag.Inventory));
        console.log("Inventory:", inventoryData);

        var stockChart = new Chart(ctxStock, {
            type: 'bar',
            data: {
                labels: inventoryData.map(i => i.Name), // check casing!
                datasets: [{
                    label: 'Stock Quantity',
                    data: inventoryData.map(i => i.StockQuantity), // check casing!
                    backgroundColor: 'rgba(54, 162, 235, 0.7)',
                    borderColor: 'rgba(54, 162, 235, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: { beginAtZero: true }
                }
            }
        });


        // ---------- MONTHLY SALES CHART ----------
        var ctxMonthly = document.getElementById('monthlySalesChart').getContext('2d');
        var monthlyData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewBag.MonthlySales));
        console.log("Monthly:", monthlyData);
        monthlyData.forEach(x => console.log(x));
        var months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];
        var monthlySalesValues = months.map((m, i) => {
                  var monthData = monthlyData.find(x => x.Month === i + 1);
                  return monthData ? monthData.Total : 0;

        }); console.log("Values for chart:", monthlySalesValues);
        var monthlyChart = new Chart(ctxMonthly, {
            type: 'line',
            data: {
                labels: months,
                datasets: [{
                    label: 'Monthly Sales',
                    data: monthlySalesValues,
                    backgroundColor: 'rgba(255, 99, 132, 0.2)',
                    borderColor: 'rgba(255, 99, 132, 1)',
                    borderWidth: 2,
                    fill: true
                }]
            },
            options: { responsive: true }
        });

               // ---------- SALES BY PARTY CHART ----------
        var ctxParty = document.getElementById('partySalesChart').getContext('2d');
        var partyData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewBag.SalesByParty));

        console.log("Party Data:", partyData);

        var partyChart = new Chart(ctxParty, {
            type: 'pie',
            data: {
                labels: partyData.map(x => x.Party),   
                datasets: [{
                    label: 'Sales by Party',
                    data: partyData.map(x => x.Total), 
                    backgroundColor: [
                        '#FF6384','#36A2EB','#FFCE56','#4BC0C0','#9966FF','#FF9F40'
                    ]
                }]
            },
            options: { responsive: false,              
          maintainAspectRatio: false }
        });

    </script>
}
